<?php

/**
 * PluginCategory
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginCategory extends BaseCategory
{
	//returns a category, from its slug name
	public static function getCategoryFromSlug($slug) {
		$category = Doctrine::getTable('category')->createQuery('a')->where('slug=?', $slug)->execute();
		if (count($category) > 0) {
			return $category[0];
		}
		else { return null; }
	}

	//returns a string representation of the crumbtrail navigation
	public function getCrumb()
	{
		$p = $this->getNode();
		if (isset($p)) {
			$i = 0;
			while ($p != null) {
				$breadcrumbs[$i] = $p->getRecord()->getSlug();
				if ($p->hasParent()) { $p = $p->getParent()->getNode(); $i++; }
				else { $p = null; }
			}
			$i--;  //remove root node "categories"
			$path = "";
			while($i >= 0) {
				if ($i>0) { $path = $path . $breadcrumbs[$i] . "/"; }
				else { $path = $path . $breadcrumbs[$i]; }
				$i--;
			}
		}
		return $path;
	}

	//Get the root category of the category tree
	public static function getRootCategory() {
		$treeObject = Doctrine_Core::getTable('Category')->getTree();
		$rootColumnName = $treeObject->getAttribute('rootColumnName');
		$roots = $treeObject->fetchRoots();
		if (count($roots) > 0) { return $roots[0]; }
		else { return null; }
	}

	//converts any given string into a sluggable string
	public function slugify($text)
	{
		//replace all non letters or digits by -
		$text = preg_replace('/\W+/', '-', $text);
		//trim and lowercase
		$text = strtolower(trim($text, '-'));

		return $text;
	}


}